{"version":3,"sources":["pages/Home.js","pages/DataEntry.js","App.js","serviceWorker.js","index.js"],"names":["Component","Rashis","value","label","Grahas","key","Bhavas","customStyles","control","base","height","minHeight","width","DataEntry","state","planetDataArray","bhavaDataArray","testP","testB","drakBhavaData","drakPlanetData","showDrak","componentDidMount","initBhavas","initPlanets","map","item","index","setState","prevState","graha","finalData","rashiResult","anshResult","bhava","handleInput","e","origin","obj","Object","assign","data","target","arrInput","console","log","i","split","x","length","handleBhavaInput","createDrakBalForBhavas","drakData","forEach","planet","pIndex","result","arr","bhav","bIndex","drakbal","drakBalCalculator","push","createDrakBalForPlanets","Math","round","drakBalClickHandler","every","alert","planetInputCreator","className","styles","options","onChange","mask","maskChar","onBlur","bhavaInputCreator","planetInputs","bhavaInputs","Grid","container","spacing","xs","Paper","style","paddingBottom","columns","title","field","this","pageSize","pageSizeOptions","search","paging","sorting","headerStyle","zIndex","Button","variant","color","onClick","render","rowData","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.95461714.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class Home extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                home\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home\r\n","import React, { Component } from \"react\";\r\nimport { Paper, Grid } from \"@material-ui/core\";\r\nimport InputMask from \"react-input-mask\";\r\nimport Select from \"react-select\";\r\nimport MaterialTable from \"material-table\";\r\nimport Button from '@material-ui/core/Button';\r\nimport \"./pages.scss\";\r\n\r\nconst Rashis = [\r\n  { value: 0, label: \"मेष (Mesh)\" },\r\n  { value: 1, label: \"वृषभ (Vrushabh)\" },\r\n  { value: 2, label: \"मिथुन (Mithun)\" },\r\n  { value: 3, label: \"कर्क (Kark)\" },\r\n  { value: 4, label: \"सिंह (Sinh)\" },\r\n  { value: 5, label: \"कन्या (Kanya)\" },\r\n  { value: 6, label: \"तुला (Tula)\" },\r\n  { value: 7, label: \"वृश्चिक (Vrushchik)\" },\r\n  { value: 8, label: \"धनु (Dhanu)\" },\r\n  { value: 9, label: \"मकर (Makar)\" },\r\n  { value: 10, label: \"कुंभ (Kumbha)\" },\r\n  { value: 11, label: \"मीन (Meen)\" },\r\n];\r\nconst Grahas = [\r\n  { key: 0, label: \"सूर्य\" },\r\n  { key: 1, label: \"चन्द्र\" },\r\n  { key: 2, label: \"मंगल\" },\r\n  { key: 3, label: \"बुध\" },\r\n  { key: 4, label: \"गुरु\" },\r\n  { key: 5, label: \"शुक्र\" },\r\n  { key: 6, label: \"शनि\" },\r\n  { key: 7, label: \"राहु\" },\r\n  { key: 8, label: \"केतु\" },\r\n];\r\n\r\nconst Bhavas = [\r\n  { key: 0, label: \"प्रथम भाव\" },\r\n  { key: 1, label: \"द्वितीय भाव\" },\r\n  { key: 2, label: \"तृतीय भाव\" },\r\n  { key: 3, label: \"चतुर्थ भाव\" },\r\n  { key: 4, label: \"पंचम भाव\" },\r\n  { key: 5, label: \"षष्ट भाव\" },\r\n  { key: 6, label: \"सप्तम भाव\" },\r\n  { key: 7, label: \"अष्टम भाव\" },\r\n  { key: 8, label: \"नवम भाव\" },\r\n  { key: 9, label: \"दशम भाव\" },\r\n  { key: 10, label: \"एकादश भाव\" },\r\n  { key: 11, label: \"द्वादश भाव\" },\r\n];\r\n\r\nconst customStyles = {\r\n  control: (base) => ({\r\n    ...base,\r\n    height: 35,\r\n    minHeight: 35,\r\n    width: 200,\r\n  }),\r\n};\r\n\r\nexport class DataEntry extends Component {\r\n  state = {\r\n    planetDataArray: [],\r\n    bhavaDataArray: [],\r\n    testP: [108, 208, 165, 117, 222, 104, 330, 186, 6],\r\n    testB: [77, 103, 130, 156, 190, 223, 257, 283, 310, 336, 10, 43],\r\n    drakBhavaData: [],\r\n    drakPlanetData: [],\r\n    showDrak:false\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.initBhavas();\r\n    this.initPlanets();\r\n   \r\n  };\r\n\r\n  initPlanets = () => {\r\n    Grahas.map((item, index) => {\r\n      this.setState((prevState) => ({\r\n        planetDataArray: [\r\n          ...prevState.planetDataArray, // use prevState\r\n          {\r\n            graha: item.label,\r\n            finalData: null,\r\n            rashiResult: 0,\r\n            anshResult: 0,\r\n          },\r\n        ],\r\n      }));\r\n    });\r\n  };\r\n\r\n  initBhavas = () => {\r\n    Bhavas.map((item, index) => {\r\n      this.setState((prevState) => ({\r\n        bhavaDataArray: [\r\n          ...prevState.bhavaDataArray, // use prevState\r\n          {\r\n            bhava: item.label,\r\n            finalData: null,\r\n            rashiResult: 0,\r\n            anshResult: 0,\r\n          },\r\n        ],\r\n      }));\r\n    });\r\n  };\r\n\r\n  handleInput = (e, origin, key) => {\r\n    if (origin === \"rashi\") {\r\n      let rashiResult = e.value * 30;\r\n      this.setState(\r\n        (prevState) => ({\r\n          planetDataArray: prevState.planetDataArray.map((obj, index) =>\r\n            index === key\r\n              ? Object.assign(obj, { rashiResult: rashiResult })\r\n              : obj\r\n          ),\r\n        }),\r\n        () => {\r\n          let finalData =\r\n            this.state.planetDataArray[key].rashiResult +\r\n            this.state.planetDataArray[key].anshResult;\r\n          this.setState((prevState) => ({\r\n            planetDataArray: prevState.planetDataArray.map((obj, index) =>\r\n              index === key ? Object.assign(obj, { finalData: finalData }) : obj\r\n            ),\r\n          }));\r\n        }\r\n      );\r\n    } else if (origin === \"ansh\") {\r\n      let data = e.target.value;\r\n      let arrInput = [];\r\n      console.log(arrInput);\r\n      arrInput = data.split`-`.map((x) => +x);\r\n      for (let i = arrInput.length - 1; i > 0; i--) {\r\n        if (arrInput[i] > 30) {\r\n          arrInput[i - 1] = arrInput[i - 1] + 1;\r\n        }\r\n      }\r\n      let anshResult = arrInput[0];\r\n      this.setState(\r\n        (prevState) => ({\r\n          planetDataArray: prevState.planetDataArray.map((obj, index) =>\r\n            index === key ? Object.assign(obj, { anshResult: anshResult }) : obj\r\n          ),\r\n        }),\r\n        () => {\r\n          let finalData =\r\n            this.state.planetDataArray[key].rashiResult +\r\n            this.state.planetDataArray[key].anshResult;\r\n          this.setState(\r\n            (prevState) => ({\r\n              planetDataArray: prevState.planetDataArray.map((obj, index) =>\r\n                index === key\r\n                  ? Object.assign(obj, { finalData: finalData })\r\n                  : obj\r\n              ),\r\n            }),\r\n            () => {}\r\n          );\r\n        }\r\n      );\r\n    }\r\n    console.log(this.state.planetDataArray);\r\n  };\r\n\r\n  handleBhavaInput = (e, origin, key) => {\r\n    if (origin === \"rashi\") {\r\n      let rashiResult = e.value * 30;\r\n      this.setState(\r\n        (prevState) => ({\r\n          bhavaDataArray: prevState.bhavaDataArray.map((obj, index) =>\r\n            index === key\r\n              ? Object.assign(obj, { rashiResult: rashiResult })\r\n              : obj\r\n          ),\r\n        }),\r\n        () => {\r\n          let finalData =\r\n            this.state.bhavaDataArray[key].rashiResult +\r\n            this.state.bhavaDataArray[key].anshResult;\r\n          this.setState((prevState) => ({\r\n            bhavaDataArray: prevState.bhavaDataArray.map((obj, index) =>\r\n              index === key ? Object.assign(obj, { finalData: finalData }) : obj\r\n            ),\r\n          }));\r\n        }\r\n      );\r\n    } else if (origin === \"ansh\") {\r\n      let data = e.target.value;\r\n      let arrInput = [];\r\n      console.log(arrInput);\r\n      arrInput = data.split`-`.map((x) => +x);\r\n      for (let i = arrInput.length - 1; i > 0; i--) {\r\n        if (arrInput[i] > 30) {\r\n          arrInput[i - 1] = arrInput[i - 1] + 1;\r\n        }\r\n      }\r\n      let anshResult = arrInput[0];\r\n      this.setState(\r\n        (prevState) => ({\r\n          bhavaDataArray: prevState.bhavaDataArray.map((obj, index) =>\r\n            index === key ? Object.assign(obj, { anshResult: anshResult }) : obj\r\n          ),\r\n        }),\r\n        () => {\r\n          let finalData =\r\n            this.state.bhavaDataArray[key].rashiResult +\r\n            this.state.bhavaDataArray[key].anshResult;\r\n          this.setState(\r\n            (prevState) => ({\r\n              bhavaDataArray: prevState.bhavaDataArray.map((obj, index) =>\r\n                index === key\r\n                  ? Object.assign(obj, { finalData: finalData })\r\n                  : obj\r\n              ),\r\n            }),\r\n            () => {}\r\n          );\r\n        }\r\n      );\r\n    }\r\n    console.log(this.state.bhavaDataArray);\r\n  };\r\n\r\n  createDrakBalForBhavas = () => {\r\n    // if(this.state.bhavaDataArray.every(bhav => bhav.finalData !== null) &&  this.state.planetDataArray.every(planet => planet.finalData !== null)){\r\n    //   console.log(\"drak bal started\")\r\n    // }\r\n    let drakData = this.state.drakBhavaData;\r\n    this.state.planetDataArray.forEach((planet, pIndex) => {\r\n      let result;\r\n      let arr = [];\r\n      this.state.bhavaDataArray.forEach((bhav, bIndex) => {\r\n        if (pIndex !== 7 && pIndex !== 8) {\r\n          let value = bhav.finalData - planet.finalData;\r\n          if (value < 0) {\r\n            value = value + 360;\r\n          }\r\n          result = {\r\n            key: bIndex,\r\n            value: value,\r\n            drakbal:this.drakBalCalculator(pIndex,value)\r\n          };\r\n\r\n          arr.push(result);\r\n        } else {\r\n          result = {\r\n            key: bIndex,\r\n            value: \"N/A\",\r\n            drakbal:\"N/A\",\r\n          };\r\n          arr.push(result);\r\n        }\r\n      });\r\n      drakData[pIndex] = arr;\r\n    });\r\n    console.log(drakData);\r\n  };\r\n  createDrakBalForPlanets = () => {\r\n    // if(this.state.bhavaDataArray.every(bhav => bhav.finalData !== null) &&  this.state.planetDataArray.every(planet => planet.finalData !== null)){\r\n    //   console.log(\"drak bal started\")\r\n    // }\r\n    let drakData = this.state.drakPlanetData;\r\n    this.state.planetDataArray.forEach((planet, pIndex) => {\r\n      let result;\r\n      let arr = [];\r\n      this.state.planetDataArray.forEach((graha, bIndex) => {\r\n        if (pIndex !== 7 && pIndex !== 8 && bIndex !== 7 && bIndex !== 8) {\r\n          let value = graha.finalData - planet.finalData;\r\n          if (value < 0) {\r\n            value = value + 360;\r\n          }\r\n          result = {\r\n            key: bIndex,\r\n            value: value,\r\n            drakbal:this.drakBalCalculator(pIndex,value)\r\n\r\n          };\r\n\r\n          arr.push(result);\r\n        } else {\r\n          result = {\r\n            key: bIndex,\r\n            value: \"N/A\",\r\n            drakbal:\"N/A\"\r\n          };\r\n          arr.push(result);\r\n        }\r\n      });\r\n\r\n      drakData[pIndex] = arr;\r\n    });\r\n    console.log(drakData);\r\n  };\r\n\r\n  drakBalCalculator = (planet, value) => {\r\n    let drakBal;\r\n    switch (planet) {\r\n      case 2:\r\n        if (value > 300 || value < 30) {\r\n          drakBal = 0;\r\n          return drakBal;\r\n        } else if (value >= 30 && value < 60) {\r\n          drakBal = Math.round((((value - 30) / 2) * 10) / 6);\r\n          return drakBal;\r\n        } else if (value >= 60 && value < 90) {\r\n          drakBal = Math.round(((15 + (value - 60)) * 10) / 6);\r\n          return drakBal;\r\n        } else if (value >= 90 && value < 121) {\r\n          drakBal = Math.round(((90 - value / 2) * 10) / 6) + 25;\r\n          return drakBal;\r\n        } else if (value >= 121 && value < 150) {\r\n          drakBal = Math.round(((150 - value) * 10) / 6);\r\n          return drakBal;\r\n        } else if (value >= 150 && value < 180) {\r\n          drakBal = Math.round(((value - 150) * 20) / 6);\r\n          return drakBal;\r\n        } else if (value >= 180 && value < 210) {\r\n          drakBal = Math.round((((300 - value) / 2) * 10) / 6);\r\n          return drakBal;\r\n        } else if (value >= 210 && value < 241) {\r\n          drakBal = Math.round((((300 - value) / 2) * 10) / 6) + 25;\r\n          return drakBal;\r\n        } else if (value >= 241 && value <= 300) {\r\n          drakBal = Math.round((((300 - value) / 2) * 10) / 6);\r\n          return drakBal;\r\n        }\r\n\r\n        break;\r\n      case 4:\r\n        if (value > 300 || value < 30) {\r\n          drakBal = 0;\r\n          return drakBal;\r\n        } else if (value >= 30 && value < 60) {\r\n          drakBal = Math.round((((value - 30) / 2) * 10) / 6);\r\n          return drakBal;\r\n        } else if (value >= 60 && value < 90) {\r\n          drakBal = Math.round(((15 + (value - 60)) * 10) / 6);\r\n          return drakBal;\r\n        } else if (value >= 90 && value < 120) {\r\n          drakBal = Math.round(((90 - value / 2) * 10) / 6);\r\n          return drakBal;\r\n        } else if (value >= 120 && value <= 150) {\r\n          drakBal = Math.round(((150 - value) * 10) / 6) + 50;\r\n          return drakBal;\r\n        } else if (value >= 151 && value < 180) {\r\n          drakBal = Math.round(((value - 150) * 20) / 6);\r\n          return drakBal;\r\n        } else if (value >= 180 && value < 240) {\r\n          drakBal = Math.round((((300 - value) / 2) * 10) / 6);\r\n          return drakBal;\r\n        } else if (value >= 240 && value <= 270) {\r\n          drakBal = Math.round((((300 - value) / 2) * 10) / 6) + 50;\r\n          return drakBal;\r\n        } else if (value >= 271 && value <= 300) {\r\n          drakBal = Math.round((((300 - value) / 2) * 10) / 6);\r\n          return drakBal;\r\n        }\r\n        break;\r\n      case 6:\r\n        if (value > 300 || value < 30) {\r\n          drakBal = 0;\r\n          return drakBal;\r\n        } else if (value >= 30 && value < 60) {\r\n          drakBal = Math.round((((value - 30) / 2) * 10) / 6);\r\n          return drakBal;\r\n        } else if (value >= 60 && value <= 90) {\r\n          drakBal = Math.round(((15 + (value - 60)) * 10) / 6) + 75;\r\n          return drakBal;\r\n        } else if (value >= 91 && value < 120) {\r\n          drakBal = Math.round(((90 - value / 2) * 10) / 6);\r\n          return drakBal;\r\n        } else if (value >= 120 && value < 150) {\r\n          drakBal = Math.round(((150 - value) * 10) / 6);\r\n          return drakBal;\r\n        } else if (value >= 150 && value < 180) {\r\n          drakBal = Math.round(((value - 150) * 20) / 6);\r\n          return drakBal;\r\n        } else if (value >= 180 && value < 270) {\r\n          drakBal = Math.round((((300 - value) / 2) * 10) / 6);\r\n          return drakBal;\r\n        } else if (value >= 270 && value <= 300) {\r\n          drakBal = Math.round((((300 - value) / 2) * 10) / 6) + 75;\r\n          return drakBal;\r\n        }\r\n        break;\r\n      case 0:\r\n      case 1:\r\n      case 3:\r\n      case 5:\r\n        if (value > 300 || value < 30) {\r\n          drakBal = 0;\r\n          return drakBal\r\n        } else if (value >= 30 && value < 60) {\r\n          drakBal = Math.round((((value - 30) / 2) * 10) / 6);\r\n          return drakBal;\r\n        } else if (value >= 60 && value < 90) {\r\n          drakBal = Math.round(((15 + (value - 60)) * 10) / 6);\r\n          return drakBal;\r\n        } else if (value >= 90 && value < 120) {\r\n          drakBal = Math.round(((90 - value / 2) * 10) / 6);\r\n          return drakBal;\r\n        } else if (value >= 120 && value < 150) {\r\n          drakBal = Math.round(((150 - value) * 10) / 6);\r\n          return drakBal;\r\n        } else if (value >= 150 && value < 180) {\r\n          drakBal = Math.round(((value - 150) * 20) / 6);\r\n          return drakBal;\r\n        } else if (value >= 180 && value <= 300) {\r\n          drakBal = Math.round((((300 - value) / 2) * 10) / 6);\r\n          return drakBal;\r\n        }\r\n        break;\r\n      default:\r\n        console.log(`planet is out of our planet system`);\r\n    }\r\n  };\r\n\r\n  drakBalClickHandler=()=>{\r\n     if(this.state.bhavaDataArray.every(bhav => bhav.finalData !== null) &&  this.state.planetDataArray.every(planet => planet.finalData !== null)){\r\n      this.createDrakBalForBhavas();\r\n    this.createDrakBalForPlanets();\r\n    this.setState({showDrak:true})\r\n    }\r\n    else{\r\n      alert(\"सर्व प्रथम सम्पूर्ण  ग्रह स्पष्ट एवं भाव स्पष्ट भरे |\")\r\n    }\r\n    \r\n  }\r\n  planetInputCreator = (graha) => {\r\n    return (\r\n      <div className=\"paper-content\" key={graha.key}>\r\n        <span className=\"content-title\">{graha.label} :</span>\r\n        <div className=\"content-select\">\r\n          <Select\r\n            styles={customStyles}\r\n            options={Rashis}\r\n            onChange={(e) => {\r\n              this.handleInput(e, \"rashi\", graha.key);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"content-input\">\r\n          <InputMask\r\n            mask=\"99-99-99\"\r\n            maskChar=\" \"\r\n            onBlur={(e) => {\r\n              this.handleInput(e, \"ansh\", graha.key);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  bhavaInputCreator = (bhava) => {\r\n    return (\r\n      <div className=\"paper-content\" key={bhava.key}>\r\n        <span className=\"content-title\">{bhava.label} :</span>\r\n        <div className=\"content-select\">\r\n          <Select\r\n            options={Rashis}\r\n            styles={customStyles}\r\n            onChange={(e) => {\r\n              this.handleBhavaInput(e, \"rashi\", bhava.key);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"content-input\">\r\n          <InputMask\r\n            mask=\"99-99-99\"\r\n            maskChar=\" \"\r\n            onBlur={(e) => {\r\n              this.handleBhavaInput(e, \"ansh\", bhava.key);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    let planetInputs;\r\n    let bhavaInputs;\r\n    planetInputs = Grahas.map((graha) => this.planetInputCreator(graha));\r\n    bhavaInputs = Bhavas.map((bhava) => this.bhavaInputCreator(bhava));\r\n\r\n    return (\r\n      <div className=\"data-entry-container\">\r\n        <Grid container spacing={3}>\r\n          <Grid item xs>\r\n            <Paper className=\"paper-container\">\r\n              <div className=\"paper-heading\">ग्रह स्पष्ट</div>\r\n              <div className=\"paper-contents\" style={{ paddingBottom: 156 }}>\r\n                {planetInputs}\r\n              </div>\r\n              <div className=\"paper-table\" style={{ paddingBottom: 165 }}>\r\n                <MaterialTable\r\n                  columns={[\r\n                    { title: \"ग्रह\", field: \"graha\" },\r\n                    { title: \"राशि\", field: \"rashiResult\" },\r\n                    { title: \"अंश \", field: \"anshResult\" },\r\n                    { title: \"कुल ग्रहांश\", field: \"finalData\" },\r\n                  ]}\r\n                  data={this.state.planetDataArray}\r\n                  title=\"ग्रहांश सारणी\"\r\n                  options={{\r\n                    pageSize: 9,\r\n                    pageSizeOptions: [],\r\n                    search: false,\r\n                    paging: false,\r\n                    sorting:false,\r\n                    headerStyle: {\r\n                      zIndex: 0\r\n                    }\r\n                  }}\r\n                />\r\n              </div>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs>\r\n            <Paper className=\"paper-container\">\r\n              <div className=\"paper-heading\">भाव स्पष्ट</div>\r\n              <div className=\"paper-contents\">{bhavaInputs}</div>\r\n              <div className=\"paper-table\">\r\n                <MaterialTable\r\n                  columns={[\r\n                    { title: \"भाव\", field: \"bhava\" },\r\n                    { title: \"राशि\", field: \"rashiResult\" },\r\n                    { title: \"अंश \", field: \"anshResult\" },\r\n                    { title: \"कुल भावांश \", field: \"finalData\" },\r\n                  ]}\r\n                  data={this.state.bhavaDataArray}\r\n                  title=\"भावांश सारणी\"\r\n                  options={{\r\n                    pageSize: 12,\r\n                    pageSizeOptions: [],\r\n                    search: false,\r\n                    paging: false,\r\n                    sorting:false,\r\n                    headerStyle: {\r\n                      zIndex: 0\r\n                    }\r\n                  }}\r\n                />\r\n              </div>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <div className=\"bal-actions\">\r\n              <Button variant=\"contained\" color=\"primary\" onClick={this.drakBalClickHandler}>\r\n              दृकबल  बोध \r\n              </Button>\r\n            </div>\r\n          </Grid>\r\n          {\r\n            this.state.showDrak===true && (\r\n              <>\r\n              <Grid item xs={12}>\r\n            <Paper className=\"paper-container\">\r\n              <div className=\"paper-heading\">भावोपरि ग्रहाणां दृष्टयः </div>\r\n              <div className=\"paper-table\">\r\n                <MaterialTable\r\n                  columns={[\r\n                    {\r\n                      title: \"भाव 1\",\r\n                      render: (rowData) => <span>{rowData[0].drakbal}</span>,\r\n                    },\r\n                    {\r\n                      title: \"भाव 2\",\r\n                      render: (rowData) => <span>{rowData[1].drakbal}</span>,\r\n                    },\r\n                    {\r\n                      title: \"भाव 3\",\r\n                      render: (rowData) => <span>{rowData[2].drakbal}</span>,\r\n                    },\r\n                    {\r\n                      title: \"भाव 4\",\r\n                      render: (rowData) => <span>{rowData[3].drakbal}</span>,\r\n                    },\r\n                    {\r\n                      title: \"भाव 5\",\r\n                      render: (rowData) => <span>{rowData[4].drakbal}</span>,\r\n                    },\r\n                    {\r\n                      title: \"भाव 6\",\r\n                      render: (rowData) => <span>{rowData[5].drakbal}</span>,\r\n                    },\r\n                    {\r\n                      title: \"भाव 7\",\r\n                      render: (rowData) => <span>{rowData[6].drakbal}</span>,\r\n                    },\r\n                    {\r\n                      title: \"भाव 8\",\r\n                      render: (rowData) => <span>{rowData[7].drakbal}</span>,\r\n                    },\r\n                    {\r\n                      title: \"भाव 9\",\r\n                      render: (rowData) => <span>{rowData[8].drakbal}</span>,\r\n                    },\r\n                    {\r\n                      title: \"भाव 10\",\r\n                      render: (rowData) => <span>{rowData[9].drakbal}</span>,\r\n                    },\r\n                    {\r\n                      title: \"भाव 11\",\r\n                      render: (rowData) => <span>{rowData[10].drakbal}</span>,\r\n                    },\r\n                    {\r\n                      title: \"भाव 12\",\r\n                      render: (rowData) => <span>{rowData[11].drakbal}</span>,\r\n                    },\r\n                  ]}\r\n                  data={this.state.drakBhavaData}\r\n                  title=\"\"\r\n                  options={{\r\n                    pageSize: 9,\r\n                    pageSizeOptions: [],\r\n                    search: false,\r\n                    paging: false,\r\n                    sorting:false,\r\n                  }}\r\n                />\r\n              </div>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Paper className=\"paper-container\">\r\n              <div className=\"paper-heading\">ग्रहोपरि ग्रहाणां दृष्टयः </div>\r\n              <div className=\"paper-table\">\r\n                <MaterialTable\r\n                  columns={[\r\n                    {\r\n                      title: \"सूर्य\",\r\n                      render: (rowData) => <span>{rowData[0].drakbal}</span>,\r\n                    },\r\n                    {\r\n                      title: \"चन्द्र\",\r\n                      render: (rowData) => <span>{rowData[1].drakbal}</span>,\r\n                    },\r\n                    {\r\n                      title: \"मंगल\",\r\n                      render: (rowData) => <span>{rowData[2].drakbal}</span>,\r\n                    },\r\n                    {\r\n                      title: \"बुध\",\r\n                      render: (rowData) => <span>{rowData[3].drakbal}</span>,\r\n                    },\r\n                    {\r\n                      title: \"गुरु\",\r\n                      render: (rowData) => <span>{rowData[4].drakbal}</span>,\r\n                    },\r\n                    {\r\n                      title: \"शुक्र\",\r\n                      render: (rowData) => <span>{rowData[5].drakbal}</span>,\r\n                    },\r\n                    {\r\n                      title: \"शनि\",\r\n                      render: (rowData) => <span>{rowData[6].drakbal}</span>,\r\n                    },\r\n                    {\r\n                      title: \"राहु\",\r\n                      render: (rowData) => <span>{rowData[7].drakbal}</span>,\r\n                    },\r\n                    {\r\n                      title: \"केतु\",\r\n                      render: (rowData) => <span>{rowData[8].drakbal}</span>,\r\n                    },\r\n                  ]}\r\n                  data={this.state.drakPlanetData}\r\n                  title=\"\"\r\n                  options={{\r\n                    pageSize: 9,\r\n                    pageSizeOptions: [],\r\n                    search: false,\r\n                    paging: false,\r\n                    sorting:false,\r\n                  }}\r\n                />\r\n              </div>\r\n            </Paper>\r\n          </Grid>\r\n              </>\r\n            )\r\n          }\r\n          \r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataEntry;\r\n","import React from 'react';\r\nimport {\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport Home from \"./pages/Home\";\r\nimport DataEntry from \"./pages/DataEntry\";\r\nimport \"./App.scss\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={DataEntry} />\r\n            {/* <Route exact path=\"/data-entry\" component={DataEntry} /> */}\r\n          </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n\r\n    <Router>\r\n    <App />\r\n    </Router>\r\n,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}